var AR=Ajax.Request;var F=Class.create({initialize:function(a){a=Object.extend({user_id:"rails",repository:"rails",branch:"master"},a||{});this.panels=[];this.panelsWrapper=$("panels_wrapper");this.browserWrapper=$("browser_wrapper");this.shas={};this.user_id=a.user_id;this.repository=a.repository;this.branch=a.branch;GH.Commits.listBranch(this.user_id,this.repository,this.branch,{onData:function(c){var b=c.commits[0].tree;this.renderPanel(b)}.bind(this)});document.on("click","a[data-sha]",function(d,c){var b=c.readAttribute("data-sha");this.click(b,c);Event.stop(d)}.bind(this))},toHTML:function(){var a=["<div>"]},renderPanel:function(d,a,c){a=(typeof a=="undefined")?0:a;for(var b=this.panels.length-1;b>a;b--){(this.panels.pop()).dispose()}this.open(d,c)},_resizePanelsWrapper:function(){var b=201;var a=(this.panels.length*b);this.panelsWrapper.style.width=a+"px";this.browserWrapper.scrollLeft=a},open:function(b,a){GH.Tree.show(this.user_id,this.repository,this.branch,b,{onData:function(d){for(var f=0,c=d.length;f<c;f++){this.shas[d[f].sha]=d[f]}var e=a?a.name:"";var g=new P({tree:d,index:this.panels.length,name:e});this.panels.push(g);this._resizePanelsWrapper()}.bind(this)})},click:function(a,d){var f=this.shas[a];var b=+(d.up(".panel")).readAttribute("data-index");console.log("item %o",f);if(f.type=="tree"){this.renderPanel(f.sha,b,f);var e=d.up("ul").down("li.current");e?e.removeClassName("current"):"";d.up("li").addClassName("current")}else{if(/text/.test(f.mime_type)){GH.Blob.show(this.user_id,this.repository,f.sha,{onSuccess:function(h){this.previewTextFile(h.responseText,f)}.bind(this)})}}var g=[];for(var c=0;c<=b;c++){g.push(this.panels[c].name)}g.push(f.name);g=g.join("/");GH.Commits.list(this.user_id,this.repository,this.branch,g,{onData:function(l){var n=l[0];var m=["<div>"];for(var j=0;j<l.length;j++){m.push("<div>Commit: <a href=javascript:void(0) onclick=f.diff("+['"',n.id,'","',n.tree,'","',l[j].id,'","',l[j].tree,'","',f.name,'"'].join("")+")>"+l[j].id+"</a>(tree: "+l[j].tree+")</div>")}m.push("</div>");var h=["<div>Name: ","<a href=","http://github.com/"+this.user_id+"/"+this.repository+"/"+f.type+"/"+this.branch+g,"target=_blank>",f.name,"</a>","</div>","<div>Path: "+g+"</div>","<div>Committed Date: "+(new Date(n.committed_date)).toString()+"</div>","<div>","Author: <a href=http://github.com/"+n.author.login+">"+n.author.name+"</a>","("+n.author.email+")","</div>","<div>","Message:<br/>",n.message,"</div>","<div class=commits>",m.join(""),"</div>"];$("info").update(h.join(" "))}.bind(this)})},previewTextFile:function(g,f){g=g.replace(/\r\n/,"\n").split(/\n/);var b=[],c=[];sloc=0;for(var e=0,a=g.length;e<a;e++){b.push("<div>"+(e+1)+"</div>");c.push(["<div class=l>",g[e]?g[e]:"<br/>","</div>"].join(""));sloc+=g[e]?1:0}var d=["<div class=meta>","<span>"+f.mode+"</span>","<span>"+g.length+" ("+sloc+" sloc)</span>","<span>"+f.size+" bytes</span>","</div>","<table>","<tr>","<td>","<pre class=ln>",b.join(""),"</pre>","</td>","<td width=100% valign=top>","<pre>",c.join(""),"</pre>","</td>","</tr>"];$("file").update(d.join("")).show()},diff:function(f,j,e,i,a){$("file").hide();var m,l,h,d,g;var c=0;var b=function(){if(c<2){console.log("pending requests");return}m=difflib.stringAsLines(m);l=difflib.stringAsLines(l);var t=new difflib.SequenceMatcher(m,l);var q=t.get_opcodes();var r=$("diffoutput");while(r.firstChild){r.removeChild(r.firstChild)}var s=null;var o=false;try{var p=diffview.buildView({baseTextLines:m,newTextLines:l,opcodes:q,baseTextName:"Tree: "+j+"<br/>("+h+")",newTextName:"Tree: "+i+"<br/>("+file2Sha+")",contextSize:s,viewType:o});r.appendChild(p);console.log("done")}catch(n){alert(n.message);console.log("ex %o",n)}};GH.Tree.show(this.user_id,this.repository,this.branch,j,{onData:function(n){for(var o=0;o<n.length;o++){if(n[o].name==a){GH.Blob.show(this.user_id,this.repository,n[o].sha,{onSuccess:function(p){m=p.responseText;h=n[o].sha;c++;b()}.bind(this)});break}}}.bind(this)});GH.Tree.show(this.user_id,this.repository,this.branch,i,{onData:function(n){for(var o=0;o<n.length;o++){if(n[o].name==a){GH.Blob.show(this.user_id,this.repository,n[o].sha,{onSuccess:function(p){l=p.responseText;file2Sha=n[o].sha;c++;b()}.bind(this)});break}}}.bind(this)})},test:function(){var f="1607a8b08ce355043220f035b6d56a6e5a5d782c";var e="ee9c950f2fe0c7953f0a9ad6a53439da7a4e89bc";var a="Gemfile";var j="27e7a9c4210ab4fa49e20afffdf723dda4366a15";var i="1b3f6a3e49be0ebacb251de0c0fc12bf64e2e596";var m,l,h,d,g;var c=0;var b=function(){if(c<2){console.log("pending requests");return}console.log("file1 %o",m);console.log("file2 %o",l);$("file1").value=m;$("file2").value=l;m=difflib.stringAsLines(m);l=difflib.stringAsLines(l);var t=new difflib.SequenceMatcher(m,l);var q=t.get_opcodes();var r=$("diffoutput");while(r.firstChild){r.removeChild(r.firstChild)}var s=null;var o=false;try{var p=diffview.buildView({baseTextLines:m,newTextLines:l,opcodes:q,baseTextName:"Tree: "+j+"<br/>("+h+")",newTextName:"Tree: "+i+"<br/>("+file2Sha+")",contextSize:s,viewType:o});r.appendChild(p);console.log("done")}catch(n){alert(n.message);console.log("ex %o",n)}};GH.Tree.show(this.user_id,this.repository,this.branch,j,{onData:function(n){for(var o=0;o<n.length;o++){if(n[o].name==a){GH.Blob.show(this.user_id,this.repository,n[o].sha,{onSuccess:function(p){m=p.responseText;h=n[o].sha;c++;b()}.bind(this)});break}}}.bind(this)});GH.Tree.show(this.user_id,this.repository,this.branch,i,{onData:function(n){for(var o=0;o<n.length;o++){if(n[o].name==a){GH.Blob.show(this.user_id,this.repository,n[o].sha,{onSuccess:function(p){l=p.responseText;file2Sha=n[o].sha;c++;b()}.bind(this)});break}}}.bind(this)})}});var P=Class.create({initialize:function(a){a=Object.extend({tree:[],index:0,name:""},a,{});this.tree=a.tree;this.index=a.index;this.name=a.name;this.render()},dispose:function(){$("p"+this.index).remove()},render:function(){$("panels_wrapper").insert({bottom:this.toHTML()});$("p"+this.index).select("li").each(function(a){a.observe("mouseover",function(){a.addClassName("hover")}).observe("mouseout",function(){a.removeClassName("hover")})})},toHTML:function(){var d=["<ul>"];var e;for(var c=0,a=this.tree.length;c<a;c++){e=this.tree[c];var b=e.type=="tree"?"folder":"file";d.push("<li class="+b+"><a href=javascript:void(0) data-sha="+e.sha+">"+e.name+"</a></li>")}d.push("</ul>");return"<div id=p"+this.index+" data-index="+this.index+" class=panel>"+d.join("")+"</div>"}});document.on("dom:loaded",function(){window.f=new F({user_id:"rails",repository:"rails",branch:"master"})});var GH={hash:{},proxy:"./proxy.php?url=",api:"http://github.com/api/v2/json",Commits:{listBranch:function(user_id,repository,branch,options){options=Object.extend({onSuccess:function(response){var commits=eval("("+response.responseText+")");onData(commits)},onData:Prototype.K},options||{});var onData=options.onData;var url=GH.api+"/commits/list/"+user_id+"/"+repository+"/"+branch;new AR(GH.proxy+url,options)},list:function(user_id,repository,branch,path,options){options=Object.extend({onSuccess:function(response){var commits=eval("("+response.responseText+")").commits;onData(commits)},onData:Prototype.K},options||{});var onData=options.onData;var url=GH.api+"/commits/list/"+user_id+"/"+repository+"/"+branch+path;new AR(GH.proxy+url,options)},show:function(user_id,repository,sha,options){options=Object.extend({onSuccess:function(response){var commit=eval("("+response.responseText+")").commit;onData(commit)},onData:Prototype.K},options||{});var onData=options.onData;var url=GH.api+"/commits/show/"+user_id+"/"+repository+"/"+sha;new AR(GH.proxy+url,options)}},Tree:{show:function(user_id,repository,branch,tree_sha,options){options=Object.extend({onSuccess:function(response){var tree=(eval("("+response.responseText+")")).tree;tree=tree.sort(function(a,b){if(a.type=="blob"&&b.type=="tree"){return 1}if(a.type=="tree"&&b.type=="blob"){return -1}return a.name>b.name?1:(a.name<b.name?-1:0)});onData(tree)}},options||{});var onData=options.onData;var url=GH.api+"/tree/show/"+user_id+"/"+repository+"/"+tree_sha;new AR(GH.proxy+url,options)}},Blob:{show:function(a,f,b,d){d=Object.extend({onSuccess:Prototype.K},d||{});var e=d.onData;var c=GH.api+"/blob/show/"+a+"/"+f+"/"+b;new AR(GH.proxy+c,d)},showByCommit:function(a,e,g,f,c){c=Object.extend({onSuccess:Prototype.K},c||{});var d=c.onData;var b=GH.api+"/blob/"+a+"/"+e+"/"+g+f;new AR(GH.proxy+b,c)}}};__whitespace={" ":true,"\t":true,"\n":true,"\f":true,"\r":true};difflib={defaultJunkFunction:function(a){return a in __whitespace},stripLinebreaks:function(a){return a.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(f){var a=f.indexOf("\n");var e=f.indexOf("\r");var d=((a>-1&&e>-1)||e<0)?"\n":"\r";var b=f.split(d);for(var c=0;c<b.length;c++){b[c]=difflib.stripLinebreaks(b[c])}return b},__reduce:function(c,e,b){if(b!=null){var d=b;var a=0}else{if(e){var d=e[0];var a=1}else{return null}}for(;a<e.length;a++){d=c(d,e[a])}return d},__ntuplecomp:function(d,c){var e=Math.max(d.length,c.length);for(var f=0;f<e;f++){if(d[f]<c[f]){return -1}if(d[f]>c[f]){return 1}}return d.length==c.length?0:(d.length<c.length?-1:1)},__calculate_ratio:function(b,a){return a?2*b/a:1},__isindict:function(a){return function(b){return b in a}},__dictget:function(c,b,a){return b in c?c[b]:a},SequenceMatcher:function(e,c,d){this.set_seqs=function(g,f){this.set_seq1(g);this.set_seq2(f)};this.set_seq1=function(b){if(b==this.a){return}this.a=b;this.matching_blocks=this.opcodes=null};this.set_seq2=function(a){if(a==this.b){return}this.b=a;this.matching_blocks=this.opcodes=this.fullbcount=null;this.__chain_b()};this.__chain_b=function(){var o=this.b;var g=o.length;var h=this.b2j={};var j={};for(var m=0;m<o.length;m++){var l=o[m];if(l in h){var p=h[l];if(g>=200&&p.length*100>g){j[l]=1;delete h[l]}else{p.push(m)}}else{h[l]=[m]}}for(var l in j){delete h[l]}var f=this.isjunk;var a={};if(f){for(var l in j){if(f(l)){a[l]=1;delete j[l]}}for(var l in h){if(f(l)){a[l]=1;delete h[l]}}}this.isbjunk=difflib.__isindict(a);this.isbpopular=difflib.__isindict(j)};this.find_longest_match=function(g,w,q,n){var y=this.a;var x=this.b;var z=this.b2j;var f=this.isbjunk;var o=g;var m=q;var l=0;var t=null;var s={};var p=[];for(var u=g;u<w;u++){var h={};var r=difflib.__dictget(z,y[u],p);for(var v in r){t=r[v];if(t<q){continue}if(t>=n){break}h[t]=k=difflib.__dictget(s,t-1,0)+1;if(k>l){o=u-k+1;m=t-k+1;l=k}}s=h}while(o>g&&m>q&&!f(x[m-1])&&y[o-1]==x[m-1]){o--;m--;l++}while(o+l<w&&m+l<n&&!f(x[m+l])&&y[o+l]==x[m+l]){l++}while(o>g&&m>q&&f(x[m-1])&&y[o-1]==x[m-1]){o--;m--;l++}while(o+l<w&&m+l<n&&f(x[m+l])&&y[o+l]==x[m+l]){l++}return[o,m,l]};this.get_matching_blocks=function(){if(this.matching_blocks!=null){return this.matching_blocks}var f=this.a.length;var b=this.b.length;var q=[[0,f,0,b]];var l=[];var s,m,v,r,a,p,n,h,t;while(q.length){a=q.pop();s=a[0];m=a[1];v=a[2];r=a[3];t=this.find_longest_match(s,m,v,r);p=t[0];n=t[1];h=t[2];if(h){l.push(t);if(s<p&&v<n){q.push([s,p,v,n])}if(p+h<m&&n+h<r){q.push([p+h,m,n+h,r])}}}l.sort(difflib.__ntuplecomp);var g=j1=k1=block=0;var o=[];for(var u in l){block=l[u];i2=block[0];j2=block[1];k2=block[2];if(g+k1==i2&&j1+k1==j2){k1+=k2}else{if(k1){o.push([g,j1,k1])}g=i2;j1=j2;k1=k2}}if(k1){o.push([g,j1,k1])}o.push([f,b,0]);this.matching_blocks=o;return this.matching_blocks};this.get_opcodes=function(){if(this.opcodes!=null){return this.opcodes}var h=0;var g=0;var n=[];this.opcodes=n;var f,l,b,o,p;var a=this.get_matching_blocks();for(var m in a){f=a[m];l=f[0];b=f[1];o=f[2];p="";if(h<l&&g<b){p="replace"}else{if(h<l){p="delete"}else{if(g<b){p="insert"}}}if(p){n.push([p,h,l,g,b])}h=l+o;g=b+o;if(o){n.push(["equal",l,h,b,g])}}return n};this.get_grouped_opcodes=function(g){if(!g){g=3}var a=this.get_opcodes();if(!a){a=[["equal",0,1,0,1]]}var b,p,i,h,o,m;if(a[0][0]=="equal"){b=a[0];p=b[0];i=b[1];h=b[2];o=b[3];m=b[4];a[0]=[p,Math.max(i,h-g),h,Math.max(o,m-g),m]}if(a[a.length-1][0]=="equal"){b=a[a.length-1];p=b[0];i=b[1];h=b[2];o=b[3];m=b[4];a[a.length-1]=[p,i,Math.min(h,i+g),o,Math.min(m,o+g)]}var l=g+g;var f=[];for(var j in a){b=a[j];p=b[0];i=b[1];h=b[2];o=b[3];m=b[4];if(p=="equal"&&h-i>l){f.push([p,i,Math.min(h,i+g),o,Math.min(m,o+g)]);i=Math.max(i,h-g);o=Math.max(o,m-g)}f.push([p,i,h,o,m])}if(f&&f[f.length-1][0]=="equal"){f.pop()}return f};this.ratio=function(){matches=difflib.__reduce(function(a,b){return a+b[b.length-1]},this.get_matching_blocks(),0);return difflib.__calculate_ratio(matches,this.a.length+this.b.length)};this.quick_ratio=function(){var a,b;if(this.fullbcount==null){this.fullbcount=a={};for(var g=0;g<this.b.length;g++){b=this.b[g];a[b]=difflib.__dictget(a,b,0)+1}}a=this.fullbcount;var j={};var f=difflib.__isindict(j);var h=numb=0;for(var g=0;g<this.a.length;g++){b=this.a[g];if(f(b)){numb=j[b]}else{numb=difflib.__dictget(a,b,0)}j[b]=numb-1;if(numb>0){h++}}return difflib.__calculate_ratio(h,this.a.length+this.b.length)};this.real_quick_ratio=function(){var b=this.a.length;var a=this.b.length;return _calculate_ratio(Math.min(b,a),b+a)};this.isjunk=d?d:difflib.defaultJunkFunction;this.a=this.b=null;this.set_seqs(e,c)}};diffview={buildView:function(B){var t=B.baseTextLines;var e=B.newTextLines;var m=B.opcodes;var h=B.baseTextName?B.baseTextName:"Base Text";var u=B.newTextName?B.newTextName:"New Text";var p=B.contextSize;var d=(B.viewType==0||B.viewType==1)?B.viewType:0;if(t==null){throw"Cannot build diff view; baseTextLines is not defined."}if(e==null){throw"Cannot build diff view; newTextLines is not defined."}if(!m){throw"Canno build diff view; opcodes is not defined."}function D(i,b){var n=document.createElement(i);n.className=b;return n}function o(b,n){var i=document.createElement(b);i.appendChild(document.createTextNode(n));return i}function q(i,b,G){var n=document.createElement(i);n.className=b;n.appendChild(document.createTextNode(G));return n}var r=document.createElement("thead");var x=document.createElement("tr");r.appendChild(x);if(d){x.appendChild(document.createElement("th"));x.appendChild(document.createElement("th"));x.appendChild(q("th","texttitle",h+" vs. "+u))}else{x.appendChild(document.createElement("th"));x.appendChild(q("th","texttitle",h));x.appendChild(document.createElement("th"));x.appendChild(q("th","texttitle",u))}r=[r];var l=[];var a;function c(G,b,n,i,H){if(b<n){G.appendChild(o("th",(b+1).toString()));G.appendChild(q("td",H,i[b].replace(/\t/g,"\u00a0\u00a0\u00a0\u00a0")));return b+1}else{G.appendChild(document.createElement("th"));G.appendChild(D("td","empty"));return b}}function A(G,b,n,i,H){G.appendChild(o("th",b==null?"":(b+1).toString()));G.appendChild(o("th",n==null?"":(n+1).toString()));G.appendChild(q("td",H,i[b!=null?b:n].replace(/\t/g,"\u00a0\u00a0\u00a0\u00a0")))}for(var s=0;s<m.length;s++){code=m[s];change=code[0];var C=code[1];var f=code[2];var v=code[3];var j=code[4];var E=Math.max(f-C,j-v);var w=[];var z=[];for(var y=0;y<E;y++){if(p&&m.length>1&&((s>0&&y==p)||(s==0&&y==0))&&change=="equal"){var g=E-((s==0?1:2)*p);if(g>1){w.push(x=document.createElement("tr"));C+=g;v+=g;y+=g-1;x.appendChild(o("th","..."));if(!d){x.appendChild(q("td","skip",""))}x.appendChild(o("th","..."));x.appendChild(q("td","skip",""));if(s+1==m.length){break}else{continue}}}w.push(x=document.createElement("tr"));if(d){if(change=="insert"){A(x,null,v++,e,change)}else{if(change=="replace"){z.push(a=document.createElement("tr"));if(C<f){A(x,C++,null,t,"delete")}if(v<j){A(a,null,v++,e,"insert")}}else{if(change=="delete"){A(x,C++,null,t,change)}else{A(x,C++,v++,t,change)}}}}else{C=c(x,C,f,t,change);v=c(x,v,j,e,change)}}for(var y=0;y<w.length;y++){l.push(w[y])}for(var y=0;y<z.length;y++){l.push(z[y])}}l.push(x=q("th","author","diff view generated by "));x.setAttribute("colspan",d?3:4);x.appendChild(a=o("a","jsdifflib"));a.setAttribute("href","http://snowtide.com/jsdifflib");r.push(x=document.createElement("tbody"));for(var y=0;y<l.length;y++){x.appendChild(l[y])}x=D("table","diff"+(d?" inlinediff":""));for(var y=0;y<r.length;y++){x.appendChild(r[y])}return x}};